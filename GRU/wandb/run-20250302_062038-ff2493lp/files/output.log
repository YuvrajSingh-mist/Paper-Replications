/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return func(*args, **kwargs)
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: Using a target size (torch.Size([16])) that is different to the input size (torch.Size([16, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return func(*args, **kwargs)
Epoch:  0 | Train Loss:  tensor(0.5160, device='cuda:0') | Val Loss:  tensor(0.5034, device='cuda:0')
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return func(*args, **kwargs)
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: Using a target size (torch.Size([16])) that is different to the input size (torch.Size([16, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return func(*args, **kwargs)
Epoch:  1 | Train Loss:  tensor(0.5137, device='cuda:0') | Val Loss:  tensor(0.4830, device='cuda:0')
Epoch:  2 | Train Loss:  tensor(0.5143, device='cuda:0') | Val Loss:  tensor(0.4768, device='cuda:0')
Epoch:  3 | Train Loss:  tensor(0.5138, device='cuda:0') | Val Loss:  tensor(0.4726, device='cuda:0')
Epoch:  4 | Train Loss:  tensor(0.5133, device='cuda:0') | Val Loss:  tensor(0.4644, device='cuda:0')
Epoch:  5 | Train Loss:  tensor(0.5132, device='cuda:0') | Val Loss:  tensor(0.4652, device='cuda:0')
Epoch:  6 | Train Loss:  tensor(0.5136, device='cuda:0') | Val Loss:  tensor(0.4643, device='cuda:0')
Epoch:  7 | Train Loss:  tensor(0.5135, device='cuda:0') | Val Loss:  tensor(0.4700, device='cuda:0')
Epoch:  8 | Train Loss:  tensor(0.5132, device='cuda:0') | Val Loss:  tensor(0.4703, device='cuda:0')
Epoch:  9 | Train Loss:  tensor(0.5134, device='cuda:0') | Val Loss:  tensor(0.4653, device='cuda:0')
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return func(*args, **kwargs)
After:  torch.Size([16, 128])
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: Using a target size (torch.Size([16])) that is different to the input size (torch.Size([16, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return func(*args, **kwargs)
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
After:  torch.Size([16, 128])
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return func(*args, **kwargs)
/home/yuvrajsingh/anaconda3/envs/unsloth_env/lib/python3.11/site-packages/torch/utils/_device.py:106: UserWarning: Using a target size (torch.Size([16])) that is different to the input size (torch.Size([16, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return func(*args, **kwargs)
